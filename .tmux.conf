#=======================================================
# Basic Configurations
#=======================================================
# keybind
set-window-option -g mode-keys vi
bind-key ` suspend-client
#------------------
# mouse
#------------------
 
# Until version 2.0
#bind m \
#  set -g mode-mouse on \;\
#  set -g mouse-resize-pane on \;\
#  set -g mouse-select-pane on \;\
#  set -g mouse-select-window on \;\
#  display 'Mouse: ON'
# bind M \
#  set -g mode-mouse off \;\
#  set -g mouse-resize-pane off \;\
#  set -g mouse-select-pane off \;\
#  set -g mouse-select-window off \;\
#  display 'Mouse: OFF'

# From version 2.1
bind m set-option -g mouse on
bind M set-option -g mouse off

# Dont need from version 2.3(?)
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set-option -g base-index 0

# Scroll History
set -g history-limit 10000

# Prefix
set-option -g prefix C-z
#set-option -g prefix C-q
unbind-key C-b
bind C-z send-prefix
bind a send-prefix

# Timer
set -s escape-time 0

#=======================================================
# View
#=======================================================
#-------------------------------
# Status line
#-------------------------------
set -g status-interval 5
set -g status-left-length 100
set -g status-right-length 50

set-option -g set-titles on
set-option -g set-titles-string "@#(hostname | sed 's/\\\\..*//')"

#-------------------------------
# bottom status bar
#-------------------------------
# Status bar has a dim gray background
set -g status-style bg=black,fg=white
# left :whoami@hostname
#set -g status-left '#[fg=blue,bold][#20(whoami)@#H(#I:#P)]#[defaujt]'
set -g status-left '#[fg=black,bg=white]#H#[fg=black]:#[fg=black,bg=green][#S#[fg=balack]]##[default]'
set -g status-left-length 30
# right :[2011/03/06(Sun)20:21]
#set -g status-right '#[fg=blue,bold][%Y/%m/%d(%a)%H:%M]#[default]'
set -g status-right '#[fg=black,bg=white] [%Y-%m-%d(%a) %H:%M:%S]#[default]'
set -g status-interval 1
set -g message-style bold,fg=white,bg=red

set-window-option -g window-status-current-format "#[fg=white,bg=red,bold] #I: #W #[default]"

#-------------------------------
# Pane
#-------------------------------
set -g pane-border-style fg=cyan,bg=black
set -g pane-active-border-style fg=cyan,bg=black

#-------------------------------
# Window
#-------------------------------
set-window-option -g mode-style bg=white,fg=black
set-window-option -g window-status-style bg=black,bg=white,fg=white,fg=black
setw -g window-status-current-style fg=white,bg=cyan,bold,underscore

#-------------------------------
# Session
#-------------------------------
#switchc -> switch-client
bind 8 switchc -p
bind 9 switchc -n
bind -n M-8 switchc -p
bind -n M-9 switchc -n

#=======================================================
# KeyBindings
#=======================================================

# reload config
bind r source-file ~/.tmux.conf\; display-message "Reload Config!!"

#-------------------------------
# Window
#-------------------------------
bind Space choose-window
bind c new-window -c '#{pane_current_path}'
bind -r n next-window
bind -r p previous-window
bind -n C-M-l next-window
bind -n C-M-h previous-window
bind -n M-Right next-window
bind -n M-Left previous-window
unbind right
unbind left
bind -r right next-window
bind -r left previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind x
bind x confirm-before "kill-window"

#-------------------------------
# Pane
#-------------------------------
# split window
unbind %
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# move pane
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

# vimとtmuxとシームレスにwindow/pane移動できるようにする
is_vim="tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' || tmux display-message -p '#{pane_title}' | grep '^vim$'"
bind-key -n M-k if-shell "$is_vim"  "send-keys C-w k" "select-pane -U"
bind-key -n M-j if-shell "$is_vim"  "send-keys C-w j" "select-pane -D"
bind-key -n M-h if-shell "$is_vim"  "send-keys C-w h" "select-pane -L"
bind-key -n M-l if-shell "$is_vim"  "send-keys C-w l" "select-pane -R"

# select pane
unbind Tab
bind Tab select-pane -t :.+
unbind BTab
bind BTab select-pane -t :.-

# display pane number
#   ex) C-a i 1
bind i display-panes

# resize pane
bind -r C-h resize-pane -L 1
bind -r C-l resize-pane -R 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-n resize-pane -D 6
bind -r C-p resize-pane -U 6
bind -n C-M-k resize-pane -U 1
bind -n C-M-j resize-pane -D 1

# select-layout
bind-key | select-layout even-horizontal
bind-key = select-layout even-vertical
bind-key ` select-layout tiled
bind-key -n M-= select-layout main-horizontal
bind-key -n M-| select-layout main-vertical

# synchronize-pane
bind-key s set-window-option synchronize-panes on
bind-key u set-window-option synchronize-panes off


#-------------------------------
# Other
#-------------------------------
# Esc = copy-mode
#unbind [
bind Escape copy-mode

# v and y like vi in copy-mode
bind-key -T vi-copy 'v' send -X begin-selection
bind-key -T vi-copy 'y' send -X copy-selection

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

#-------------------------------
# tmux plugins
#-------------------------------
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
'
set -g @plugin 'sainnhe/tmux-fzf'
TMUX_FZF_ORDER="window|pane|session|command|keybinding|clipboard|process"

run-shell '~/.tmux/plugins/tpm/tpm'
