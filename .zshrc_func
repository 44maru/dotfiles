#-----------------------------------------------
# Get git file remote url
#-----------------------------------------------
function gitcloneurl() {
    local url=`git remote -v | head -n1 | awk '{print $2}'`
    echo $url | clipboard
    test -f /usr/bin/xsel && echo $url | xsel -bi
}

function gitpull() {
    local current_branch=`git symbolic-ref --short HEAD | sed 's%heads/%%'`

    # tag参照していてブランチが空の場合
    [ "$current_branch" = "" ] && {
        current_branch=`git tag --points-at`
        echo "ERROR: ${current_branch} is not branch but tag"
        return 1
    }
    git branch --set-upstream-to=origin/${current_branch} ${current_branch}
    git pull -p
}

function giturl() {
    local filename=$(basename $1)
    local linenum=$2
    local git_top_dir=`git rev-parse --show-superproject-working-tree --show-toplevel | head -1`
    local git_pj_url=`git remote -v | head -n1 | awk '{print $2}' | sed 's/.git$//'`
    local path_under_top_dir=`echo $PWD | sed "s%$git_top_dir%%"`
    local current_branch=`git symbolic-ref --short HEAD | sed 's%heads/%%'`

    # tag参照していてブランチが空の場合
    [ "$current_branch" = "" ] && {
        current_branch=`git tag --points-at`
    }

    local url="$git_pj_url/blob/$current_branch/$path_under_top_dir/$filename#L$linenum"
    echo $url | clipboard
    test -f /usr/bin/xsel && echo $url | xsel -bi
}

function tsh() {
    # tmuxセッションでsshした場合に、ssh先でclipboardが正しく機能させるためにTMUX環境変数を引き継ぐ
    ssh "$@" -t "TMUX=$TMUX SHELL=/bin/zsh zsh"
}

# Required on kitty session
# and set preference : Terminal > Remote-controlled > Windows clipboard
function clipboard() {
    if type lemonade &>/dev/null; then
      lemonade copy --port=44444
      return
    fi

    line=`cat`
    if [ -v TMUX -o -v ON_TMUX ]; then
      # https://github.com/tmux/tmux/issues/636#issuecomment-264976452
      echo -ne "\033Ptmux;\033\033[5i\033\033[4i\033\\"
      echo -ne "\033Ptmux;\033\033[5i$line\033\033[4i\033\\"
      echo "$line"
    else
      echo -ne '\e''[5i'
      echo "$line"
      echo -ne '\e''[4i'
    fi
}

function vim() {
    # sshでtmuxのソケットをポートフォワードした場合に
    # ssh先で下記tmux select-paneコマンドが反映さねないことがある
    # そのため、printfによる方法でpaneの名前を変更している
    # ちなみにpaneの名前は以下のコマンドで確認可能
    #   tmux display-message -p '#{pane_title}'
    # または
    #   tmux set-window-option pane-border-format "#P: #{pane_title}"
    #   tmux set-window-option pane-border-status top
    #tmux select-pane -T vim
    printf '\003]2;%s\033\\' 'vim'
    if type nvim &>/dev/null; then
        nvim $@
    else
        command vim $@
    fi
    #tmux select-pane -T novim
    printf '\003]2;%s\033\\' 'novim'
}

function install_zsh_local() {
    local work_dir=${HOME}/work/zsh-install

    set -e

    mkdir -p ${work_dir}

    cd ${work_dir}
    mkdir -p ${HOME}/.local/ncurses
    wget -nc ftp://ftp.gnu.org/gnu/ncurses/ncurses-6.2.tar.gz
    tar vfzx ncurses-6.2.tar.gz
    cd ncurses-6.2
    ./configure \
        --prefix=$HOME/.local/ncurses \
        --without-cxx-binding \
        --with-shared \
        --enable-widec
    make
    make install

    cd ${work_dir}
    mkdir -p ${HOME}/.local/zsh
    curl -L https://sourceforge.net/projects/zsh/files/zsh/5.9/zsh-5.9.tar.xz >zsh-5.9.tar.xz
    tar vfx zsh-5.9.tar.xz
    cd zsh-5.9
    ./configure \
        --prefix=$HOME/.local/zsh \
        --enable-cflags="-I $HOME/.local/ncurses/include" \
        --enable-cppflags="-I $HOME/.local/ncurses/include" \
        --enable-ldflags="-L $HOME/.local/ncurses/lib" \
        --enable-multibyte \
        --enable-locale \
        --with-tcsetpgrp
    make
    make install

    set +e
}

function installgo() {
    local go_version=1.17.13
    mkdir -p ${HOME}/.local
    cd ${HOME}/.local
    wget -O go-${go_version}.tar.gz https://go.dev/dl/go${go_version}.linux-amd64.tar.gz
    mkdir -p go-${go_version}
    tar vfzx go-${go_version}.tar.gz -C go-${go_version} --strip-components 1
    ln -sf go-${go_version} go
}

function installlemonade() {
    curl -L -O https://github.com/lemonade-command/lemonade/releases/download/v1.1.1/lemonade_linux_amd64.tar.gz
    tar vfzx lemonade_linux_amd64.tar.gz
    mv lemonade ~/.my_tools
    rm -f lemonade_linux_amd64.tar.gz
}

function kubectl_syslog() {
  local node=$1

  kubectl get --raw "/api/v1/nodes/${node}/proxy/logs/syslog"
}

function kubectl_kernlog() {
  local node=$1

  kubectl get --raw "/api/v1/nodes/${node}/proxy/logs/kern.log"
}
